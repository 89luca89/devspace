using namespace System.Management.Automation
using namespace System.Management.Automation.Language
Register-ArgumentCompleter -Native -CommandName 'devspace' -ScriptBlock {
    param($wordToComplete, $commandAst, $cursorPosition)
    $commandElements = $commandAst.CommandElements
    $command = @(
        'devspace'
        for ($i = 1; $i -lt $commandElements.Count; $i++) {
            $element = $commandElements[$i]
            if ($element -isnot [StringConstantExpressionAst] -or
                $element.StringConstantType -ne [StringConstantType]::BareWord -or
                $element.Value.StartsWith('-')) {
                break
            }
            $element.Value
        }
    ) -join ';'
    $completions = @(switch ($command) {
        'devspace' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('add', 'add', [CompletionResultType]::ParameterValue, 'Convenience command: adds something to devspace.yaml')
            [CompletionResult]::new('analyze', 'analyze', [CompletionResultType]::ParameterValue, 'Analyzes a kubernetes namespace and checks for potential problems')
            [CompletionResult]::new('attach', 'attach', [CompletionResultType]::ParameterValue, 'Attaches to a container')
            [CompletionResult]::new('build', 'build', [CompletionResultType]::ParameterValue, 'Builds all defined images and pushes them')
            [CompletionResult]::new('cleanup', 'cleanup', [CompletionResultType]::ParameterValue, 'Cleans up resources')
            [CompletionResult]::new('connect', 'connect', [CompletionResultType]::ParameterValue, 'Connect an external cluster to devspace cloud')
            [CompletionResult]::new('create', 'create', [CompletionResultType]::ParameterValue, 'Create spaces in the cloud')
            [CompletionResult]::new('deploy', 'deploy', [CompletionResultType]::ParameterValue, 'Deploy the project')
            [CompletionResult]::new('dev', 'dev', [CompletionResultType]::ParameterValue, 'Starts the development mode')
            [CompletionResult]::new('enter', 'enter', [CompletionResultType]::ParameterValue, 'Open a shell to a container')
            [CompletionResult]::new('init', 'init', [CompletionResultType]::ParameterValue, 'Initializes DevSpace in the current folder')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'Lists configuration')
            [CompletionResult]::new('login', 'login', [CompletionResultType]::ParameterValue, 'Log into DevSpace Cloud')
            [CompletionResult]::new('logs', 'logs', [CompletionResultType]::ParameterValue, 'Prints the logs of a pod and attaches to it')
            [CompletionResult]::new('open', 'open', [CompletionResultType]::ParameterValue, 'Opens the space in the browser')
            [CompletionResult]::new('print', 'print', [CompletionResultType]::ParameterValue, 'Print displays the configuration')
            [CompletionResult]::new('purge', 'purge', [CompletionResultType]::ParameterValue, 'Delete deployed resources')
            [CompletionResult]::new('remove', 'remove', [CompletionResultType]::ParameterValue, 'Changes devspace configuration')
            [CompletionResult]::new('render', 'render', [CompletionResultType]::ParameterValue, 'Render builds all defined images and shows the yamls that would be deployed')
            [CompletionResult]::new('reset', 'reset', [CompletionResultType]::ParameterValue, 'Resets an cluster token')
            [CompletionResult]::new('run', 'run', [CompletionResultType]::ParameterValue, 'Run executes a predefined command')
            [CompletionResult]::new('set', 'set', [CompletionResultType]::ParameterValue, 'Make global configuration changes')
            [CompletionResult]::new('status', 'status', [CompletionResultType]::ParameterValue, 'Show the current status')
            [CompletionResult]::new('sync', 'sync', [CompletionResultType]::ParameterValue, 'Starts a bi-directional sync between the target container and the local path')
            [CompletionResult]::new('ui', 'ui', [CompletionResultType]::ParameterValue, 'Opens the localhost UI in the browser')
            [CompletionResult]::new('update', 'update', [CompletionResultType]::ParameterValue, 'Updates the current config')
            [CompletionResult]::new('upgrade', 'upgrade', [CompletionResultType]::ParameterValue, 'Upgrade the DevSpace CLI to the newest version')
            [CompletionResult]::new('use', 'use', [CompletionResultType]::ParameterValue, 'Use specific config')
            break
        }
        'devspace;add' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('deployment', 'deployment', [CompletionResultType]::ParameterValue, 'Adds a deployment to devspace.yaml')
            [CompletionResult]::new('image', 'image', [CompletionResultType]::ParameterValue, 'Add an image')
            [CompletionResult]::new('port', 'port', [CompletionResultType]::ParameterValue, 'Add a new port forward configuration')
            [CompletionResult]::new('provider', 'provider', [CompletionResultType]::ParameterValue, 'Adds a new cloud provider to the configuration')
            [CompletionResult]::new('sync', 'sync', [CompletionResultType]::ParameterValue, 'Add a sync path')
            break
        }
        'devspace;add;deployment' {
            [CompletionResult]::new('--chart', 'chart', [CompletionResultType]::ParameterName, 'A helm chart to deploy (e.g. ./chart or stable/mysql)')
            [CompletionResult]::new('--chart-repo', 'chart-repo', [CompletionResultType]::ParameterName, 'The helm chart repository url to use')
            [CompletionResult]::new('--chart-version', 'chart-version', [CompletionResultType]::ParameterName, 'The helm chart version to use')
            [CompletionResult]::new('--component', 'component', [CompletionResultType]::ParameterName, 'A predefined component to use (run `devspace list available-components` to see all available components)')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--context', 'context', [CompletionResultType]::ParameterName, '')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--dockerfile', 'dockerfile', [CompletionResultType]::ParameterName, 'A dockerfile')
            [CompletionResult]::new('--image', 'image', [CompletionResultType]::ParameterName, 'A docker image to deploy (e.g. dscr.io/myuser/myrepo or dockeruser/repo:0.1 or mysql:latest)')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('--manifests', 'manifests', [CompletionResultType]::ParameterName, 'The kubernetes manifests to deploy (glob pattern are allowed, comma separated, e.g. manifests/** or kube/pod.yaml)')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;add;image' {
            [CompletionResult]::new('--buildtool', 'buildtool', [CompletionResultType]::ParameterName, 'Specify which engine should build the file. Should match this regex: docker|kaniko')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--context', 'context', [CompletionResultType]::ParameterName, 'The path of the images'' context')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--dockerfile', 'dockerfile', [CompletionResultType]::ParameterName, 'The path of the images'' dockerfile')
            [CompletionResult]::new('--image', 'image', [CompletionResultType]::ParameterName, 'The image name of the image (e.g. myusername/devspace)')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--tag', 'tag', [CompletionResultType]::ParameterName, 'The tag of the image')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;add;port' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('--label-selector', 'label-selector', [CompletionResultType]::ParameterName, 'Comma separated key=value label-selector list (e.g. release=test)')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;add;provider' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--host', 'host', [CompletionResultType]::ParameterName, 'The URL DevSpace should use for this provider')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;add;sync' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--container', 'container', [CompletionResultType]::ParameterName, 'Absolute container path')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterName, 'Comma separated list of paths to exclude (e.g. node_modules/,bin,*.exe)')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('--label-selector', 'label-selector', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('--local', 'local', [CompletionResultType]::ParameterName, 'Relative local path')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;analyze' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('--patient', 'patient', [CompletionResultType]::ParameterName, 'If true, analyze will ignore failing pods and events until every deployment, statefulset, replicaset and pods are ready or the timeout is reached')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--timeout', 'timeout', [CompletionResultType]::ParameterName, 'Timeout until analyze should stop waiting')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('--wait', 'wait', [CompletionResultType]::ParameterName, 'Wait for pods to get ready if they are just starting')
            break
        }
        'devspace;attach' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Container name within pod where to execute command')
            [CompletionResult]::new('--container', 'container', [CompletionResultType]::ParameterName, 'Container name within pod where to execute command')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--image', 'image', [CompletionResultType]::ParameterName, 'Image is the config name of an image to select in the devspace config (e.g. ''default''), it is NOT a docker image like myuser/myimage')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-l', 'l', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('--label-selector', 'label-selector', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('--pick', 'pick', [CompletionResultType]::ParameterName, 'Select a pod')
            [CompletionResult]::new('--pod', 'pod', [CompletionResultType]::ParameterName, 'Pod to open a shell to')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;build' {
            [CompletionResult]::new('--allow-cyclic', 'allow-cyclic', [CompletionResultType]::ParameterName, 'When enabled allows cyclic dependencies')
            [CompletionResult]::new('--build-sequential', 'build-sequential', [CompletionResultType]::ParameterName, 'Builds the images one after another instead of in parallel')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--dependency', 'dependency', [CompletionResultType]::ParameterName, 'Builds only the specific named dependencies')
            [CompletionResult]::new('-b', 'b', [CompletionResultType]::ParameterName, 'Forces to build every image')
            [CompletionResult]::new('--force-build', 'force-build', [CompletionResultType]::ParameterName, 'Forces to build every image')
            [CompletionResult]::new('--force-dependencies', 'force-dependencies', [CompletionResultType]::ParameterName, 'Forces to re-evaluate dependencies (use with --force-build --force-deploy to actually force building & deployment of dependencies)')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('--skip-push', 'skip-push', [CompletionResultType]::ParameterName, 'Skips image pushing, useful for minikube deployment')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('-t', 't', [CompletionResultType]::ParameterName, 'Use the given tag for all built images')
            [CompletionResult]::new('--tag', 'tag', [CompletionResultType]::ParameterName, 'Use the given tag for all built images')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('--verbose-dependencies', 'verbose-dependencies', [CompletionResultType]::ParameterName, 'Builds the dependencies verbosely')
            break
        }
        'devspace;cleanup' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('images', 'images', [CompletionResultType]::ParameterValue, 'Deletes all locally created images from docker')
            break
        }
        'devspace;cleanup;images' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;connect' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('cluster', 'cluster', [CompletionResultType]::ParameterValue, 'Connects an existing cluster to DevSpace Cloud')
            break
        }
        'devspace;connect;cluster' {
            [CompletionResult]::new('--admission-controller', 'admission-controller', [CompletionResultType]::ParameterName, 'Deploy the admission controller')
            [CompletionResult]::new('--cert-manager', 'cert-manager', [CompletionResultType]::ParameterName, 'Deploy a cert manager')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--context', 'context', [CompletionResultType]::ParameterName, 'The kube context to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--domain', 'domain', [CompletionResultType]::ParameterName, 'The domain to use')
            [CompletionResult]::new('--gatekeeper', 'gatekeeper', [CompletionResultType]::ParameterName, 'Deploy the gatekeeper')
            [CompletionResult]::new('--gatekeeper-rules', 'gatekeeper-rules', [CompletionResultType]::ParameterName, 'Deploy the gatekeeper default rules')
            [CompletionResult]::new('--ingress-controller', 'ingress-controller', [CompletionResultType]::ParameterName, 'Deploy an ingress controller')
            [CompletionResult]::new('--key', 'key', [CompletionResultType]::ParameterName, 'The encryption key to use')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('--name', 'name', [CompletionResultType]::ParameterName, 'The cluster name to create')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('--open-ui', 'open-ui', [CompletionResultType]::ParameterName, 'Opens the UI and displays the cluster overview')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'The cloud provider to use')
            [CompletionResult]::new('--public', 'public', [CompletionResultType]::ParameterName, 'Connects a new public cluster')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--use-domain', 'use-domain', [CompletionResultType]::ParameterName, 'Use an automatic domain for the cluster')
            [CompletionResult]::new('--use-hostnetwork', 'use-hostnetwork', [CompletionResultType]::ParameterName, 'Use the host network for the ingress controller instead of a loadbalancer')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;create' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('space', 'space', [CompletionResultType]::ParameterValue, 'Create a new cloud space')
            break
        }
        'devspace;create;space' {
            [CompletionResult]::new('--active', 'active', [CompletionResultType]::ParameterName, 'Use the new Space as active Space for the current project')
            [CompletionResult]::new('--cluster', 'cluster', [CompletionResultType]::ParameterName, 'The cluster to create a space in')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'The cloud provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;deploy' {
            [CompletionResult]::new('--allow-cyclic', 'allow-cyclic', [CompletionResultType]::ParameterName, 'When enabled allows cyclic dependencies')
            [CompletionResult]::new('--build-sequential', 'build-sequential', [CompletionResultType]::ParameterName, 'Builds the images one after another instead of in parallel')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--dependency', 'dependency', [CompletionResultType]::ParameterName, 'Deploys only the specific named dependencies')
            [CompletionResult]::new('--deployments', 'deployments', [CompletionResultType]::ParameterName, 'Only deploy a specifc deployment (You can specify multiple deployments comma-separated')
            [CompletionResult]::new('-b', 'b', [CompletionResultType]::ParameterName, 'Forces to (re-)build every image')
            [CompletionResult]::new('--force-build', 'force-build', [CompletionResultType]::ParameterName, 'Forces to (re-)build every image')
            [CompletionResult]::new('--force-dependencies', 'force-dependencies', [CompletionResultType]::ParameterName, 'Forces to re-evaluate dependencies (use with --force-build --force-deploy to actually force building & deployment of dependencies)')
            [CompletionResult]::new('-d', 'd', [CompletionResultType]::ParameterName, 'Forces to (re-)deploy every deployment')
            [CompletionResult]::new('--force-deploy', 'force-deploy', [CompletionResultType]::ParameterName, 'Forces to (re-)deploy every deployment')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('--skip-build', 'skip-build', [CompletionResultType]::ParameterName, 'Skips building of images')
            [CompletionResult]::new('--skip-push', 'skip-push', [CompletionResultType]::ParameterName, 'Skips image pushing, useful for minikube deployment')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--timeout', 'timeout', [CompletionResultType]::ParameterName, 'Timeout until deploy should stop waiting')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('--verbose-dependencies', 'verbose-dependencies', [CompletionResultType]::ParameterName, 'Deploys the dependencies verbosely')
            [CompletionResult]::new('--wait', 'wait', [CompletionResultType]::ParameterName, 'If true will wait for pods to be running or fails after given timeout')
            break
        }
        'devspace;dev' {
            [CompletionResult]::new('--allow-cyclic', 'allow-cyclic', [CompletionResultType]::ParameterName, 'When enabled allows cyclic dependencies')
            [CompletionResult]::new('--build-sequential', 'build-sequential', [CompletionResultType]::ParameterName, 'Builds the images one after another instead of in parallel')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--deployments', 'deployments', [CompletionResultType]::ParameterName, 'Only deploy a specifc deployment (You can specify multiple deployments comma-separated')
            [CompletionResult]::new('--exit-after-deploy', 'exit-after-deploy', [CompletionResultType]::ParameterName, 'Exits the command after building the images and deploying the project')
            [CompletionResult]::new('-b', 'b', [CompletionResultType]::ParameterName, 'Forces to build every image')
            [CompletionResult]::new('--force-build', 'force-build', [CompletionResultType]::ParameterName, 'Forces to build every image')
            [CompletionResult]::new('--force-dependencies', 'force-dependencies', [CompletionResultType]::ParameterName, 'Forces to re-evaluate dependencies (use with --force-build --force-deploy to actually force building & deployment of dependencies)')
            [CompletionResult]::new('-d', 'd', [CompletionResultType]::ParameterName, 'Forces to deploy every deployment')
            [CompletionResult]::new('--force-deploy', 'force-deploy', [CompletionResultType]::ParameterName, 'Forces to deploy every deployment')
            [CompletionResult]::new('-i', 'i', [CompletionResultType]::ParameterName, 'Enable interactive mode for images (overrides entrypoint with sleep command) and start terminal proxy')
            [CompletionResult]::new('--interactive', 'interactive', [CompletionResultType]::ParameterName, 'Enable interactive mode for images (overrides entrypoint with sleep command) and start terminal proxy')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('--open', 'open', [CompletionResultType]::ParameterName, 'Open defined URLs in the browser, if defined')
            [CompletionResult]::new('--portforwarding', 'portforwarding', [CompletionResultType]::ParameterName, 'Enable port forwarding')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('--skip-build', 'skip-build', [CompletionResultType]::ParameterName, 'Skips building of images')
            [CompletionResult]::new('-x', 'x', [CompletionResultType]::ParameterName, 'Skips build & deployment and only starts sync, portforwarding & terminal')
            [CompletionResult]::new('--skip-pipeline', 'skip-pipeline', [CompletionResultType]::ParameterName, 'Skips build & deployment and only starts sync, portforwarding & terminal')
            [CompletionResult]::new('--skip-push', 'skip-push', [CompletionResultType]::ParameterName, 'Skips image pushing, useful for minikube deployment')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--sync', 'sync', [CompletionResultType]::ParameterName, 'Enable code synchronization')
            [CompletionResult]::new('-t', 't', [CompletionResultType]::ParameterName, 'Open a terminal instead of showing logs')
            [CompletionResult]::new('--terminal', 'terminal', [CompletionResultType]::ParameterName, 'Open a terminal instead of showing logs')
            [CompletionResult]::new('--timeout', 'timeout', [CompletionResultType]::ParameterName, 'Timeout until dev should stop waiting and fail')
            [CompletionResult]::new('--ui', 'ui', [CompletionResultType]::ParameterName, 'Start the ui server')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('--verbose-dependencies', 'verbose-dependencies', [CompletionResultType]::ParameterName, 'Deploys the dependencies verbosely')
            [CompletionResult]::new('--verbose-sync', 'verbose-sync', [CompletionResultType]::ParameterName, 'When enabled the sync will log every file change')
            [CompletionResult]::new('--wait', 'wait', [CompletionResultType]::ParameterName, 'If true will wait first for pods to be running or fails after given timeout')
            break
        }
        'devspace;enter' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Container name within pod where to execute command')
            [CompletionResult]::new('--container', 'container', [CompletionResultType]::ParameterName, 'Container name within pod where to execute command')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--image', 'image', [CompletionResultType]::ParameterName, 'Image is the config name of an image to select in the devspace config (e.g. ''default''), it is NOT a docker image like myuser/myimage')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-l', 'l', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('--label-selector', 'label-selector', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('--pick', 'pick', [CompletionResultType]::ParameterName, 'Select a pod')
            [CompletionResult]::new('--pod', 'pod', [CompletionResultType]::ParameterName, 'Pod to open a shell to')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('--wait', 'wait', [CompletionResultType]::ParameterName, 'Wait for the pod(s) to start if they are not running')
            break
        }
        'devspace;init' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--context', 'context', [CompletionResultType]::ParameterName, 'Context path to use for intialization')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--dockerfile', 'dockerfile', [CompletionResultType]::ParameterName, 'Dockerfile to use for initialization')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'The cloud provider to use')
            [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Change existing configuration')
            [CompletionResult]::new('--reconfigure', 'reconfigure', [CompletionResultType]::ParameterName, 'Change existing configuration')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('clusters', 'clusters', [CompletionResultType]::ParameterValue, 'Lists all connected clusters')
            [CompletionResult]::new('commands', 'commands', [CompletionResultType]::ParameterValue, 'Lists all custom DevSpace commands')
            [CompletionResult]::new('contexts', 'contexts', [CompletionResultType]::ParameterValue, 'Lists all kube contexts')
            [CompletionResult]::new('deployments', 'deployments', [CompletionResultType]::ParameterValue, 'Lists and shows the status of all deployments')
            [CompletionResult]::new('namespaces', 'namespaces', [CompletionResultType]::ParameterValue, 'Lists all namespaces in the current context')
            [CompletionResult]::new('ports', 'ports', [CompletionResultType]::ParameterValue, 'Lists port forwarding configurations')
            [CompletionResult]::new('profiles', 'profiles', [CompletionResultType]::ParameterValue, 'Lists all DevSpace profiles')
            [CompletionResult]::new('providers', 'providers', [CompletionResultType]::ParameterValue, 'Lists all providers')
            [CompletionResult]::new('spaces', 'spaces', [CompletionResultType]::ParameterValue, 'Lists all user spaces')
            [CompletionResult]::new('sync', 'sync', [CompletionResultType]::ParameterValue, 'Lists sync configuration')
            [CompletionResult]::new('vars', 'vars', [CompletionResultType]::ParameterValue, 'Lists the vars in the active config')
            break
        }
        'devspace;list;clusters' {
            [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterName, 'Show all available clusters including hosted DevSpace cloud clusters')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'Cloud Provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;commands' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;contexts' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;deployments' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;namespaces' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;ports' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;profiles' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;providers' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;spaces' {
            [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterName, 'List all spaces the user has access to in all clusters (not only created by the user)')
            [CompletionResult]::new('--cluster', 'cluster', [CompletionResultType]::ParameterName, 'List all spaces in a certain cluster')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('--name', 'name', [CompletionResultType]::ParameterName, 'Space name to show (default: all)')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'Cloud Provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;sync' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;list;vars' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;login' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--key', 'key', [CompletionResultType]::ParameterName, 'Access key to use')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'Provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;logs' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Container name within pod where to execute command')
            [CompletionResult]::new('--container', 'container', [CompletionResultType]::ParameterName, 'Container name within pod where to execute command')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('-f', 'f', [CompletionResultType]::ParameterName, 'Attach to logs afterwards')
            [CompletionResult]::new('--follow', 'follow', [CompletionResultType]::ParameterName, 'Attach to logs afterwards')
            [CompletionResult]::new('--image', 'image', [CompletionResultType]::ParameterName, 'Image is the config name of an image to select in the devspace config (e.g. ''default''), it is NOT a docker image like myuser/myimage')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-l', 'l', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('--label-selector', 'label-selector', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('--lines', 'lines', [CompletionResultType]::ParameterName, 'Max amount of lines to print from the last log')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('--pick', 'pick', [CompletionResultType]::ParameterName, 'Select a pod')
            [CompletionResult]::new('--pod', 'pod', [CompletionResultType]::ParameterName, 'Pod to print the logs of')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;open' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'The cloud provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;print' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('--skip-info', 'skip-info', [CompletionResultType]::ParameterName, 'When enabled, only prints the configuration without additional information')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;purge' {
            [CompletionResult]::new('--allow-cyclic', 'allow-cyclic', [CompletionResultType]::ParameterName, 'When enabled allows cyclic dependencies')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--dependencies', 'dependencies', [CompletionResultType]::ParameterName, 'When enabled purges the dependencies as well')
            [CompletionResult]::new('--dependency', 'dependency', [CompletionResultType]::ParameterName, 'Purges only the specific named dependencies')
            [CompletionResult]::new('-d', 'd', [CompletionResultType]::ParameterName, 'The deployment to delete (You can specify multiple deployments comma-separated, e.g. devspace-default,devspace-database etc.)')
            [CompletionResult]::new('--deployments', 'deployments', [CompletionResultType]::ParameterName, 'The deployment to delete (You can specify multiple deployments comma-separated, e.g. devspace-default,devspace-database etc.)')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('--verbose-dependencies', 'verbose-dependencies', [CompletionResultType]::ParameterName, 'Builds the dependencies verbosely')
            break
        }
        'devspace;remove' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('cluster', 'cluster', [CompletionResultType]::ParameterValue, 'Removes a connected cluster')
            [CompletionResult]::new('context', 'context', [CompletionResultType]::ParameterValue, 'Removes a kubectl-context')
            [CompletionResult]::new('deployment', 'deployment', [CompletionResultType]::ParameterValue, 'Removes one or all deployments from devspace configuration')
            [CompletionResult]::new('image', 'image', [CompletionResultType]::ParameterValue, 'Removes one or all images from the devspace')
            [CompletionResult]::new('port', 'port', [CompletionResultType]::ParameterValue, 'Removes forwarded ports from a devspace')
            [CompletionResult]::new('provider', 'provider', [CompletionResultType]::ParameterValue, 'Removes a cloud provider from the configuration')
            [CompletionResult]::new('space', 'space', [CompletionResultType]::ParameterValue, 'Removes a cloud space')
            [CompletionResult]::new('sync', 'sync', [CompletionResultType]::ParameterValue, 'Remove sync paths from the devspace')
            break
        }
        'devspace;remove;cluster' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'The cloud provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('-y', 'y', [CompletionResultType]::ParameterName, 'Ignores all questions and deletes the cluster with all services and spaces')
            [CompletionResult]::new('--yes', 'yes', [CompletionResultType]::ParameterName, 'Ignores all questions and deletes the cluster with all services and spaces')
            break
        }
        'devspace;remove;context' {
            [CompletionResult]::new('--all-spaces', 'all-spaces', [CompletionResultType]::ParameterName, 'Remove all kubectl contexts belonging to Spaces')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'The cloud provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;remove;deployment' {
            [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterName, 'Remove all deployments')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;remove;image' {
            [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterName, 'Remove all images')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;remove;port' {
            [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterName, 'Remove all configured ports')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('--label-selector', 'label-selector', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;remove;provider' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('--name', 'name', [CompletionResultType]::ParameterName, 'Cloud provider name to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;remove;space' {
            [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterName, 'Delete all spaces')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--id', 'id', [CompletionResultType]::ParameterName, 'SpaceID id to use')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'Cloud Provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;remove;sync' {
            [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterName, 'Remove all configured sync paths')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--container', 'container', [CompletionResultType]::ParameterName, 'Absolute container path to remove')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('--label-selector', 'label-selector', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('--local', 'local', [CompletionResultType]::ParameterName, 'Relative local path to remove')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;render' {
            [CompletionResult]::new('--allow-cyclic', 'allow-cyclic', [CompletionResultType]::ParameterName, 'When enabled allows cyclic dependencies')
            [CompletionResult]::new('--build-sequential', 'build-sequential', [CompletionResultType]::ParameterName, 'Builds the images one after another instead of in parallel')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--dependency', 'dependency', [CompletionResultType]::ParameterName, 'Renders only the specific named dependencies')
            [CompletionResult]::new('--deployments', 'deployments', [CompletionResultType]::ParameterName, 'Only deploy a specifc deployment (You can specify multiple deployments comma-separated')
            [CompletionResult]::new('-b', 'b', [CompletionResultType]::ParameterName, 'Forces to build every image')
            [CompletionResult]::new('--force-build', 'force-build', [CompletionResultType]::ParameterName, 'Forces to build every image')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--show-logs', 'show-logs', [CompletionResultType]::ParameterName, 'Shows the build logs')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('--skip-build', 'skip-build', [CompletionResultType]::ParameterName, 'Skips image building')
            [CompletionResult]::new('--skip-dependencies', 'skip-dependencies', [CompletionResultType]::ParameterName, 'Skips rendering the dependencies')
            [CompletionResult]::new('--skip-push', 'skip-push', [CompletionResultType]::ParameterName, 'Skips image pushing, useful for minikube deployment')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('-t', 't', [CompletionResultType]::ParameterName, 'Use the given tag for all built images')
            [CompletionResult]::new('--tag', 'tag', [CompletionResultType]::ParameterName, 'Use the given tag for all built images')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('--verbose-dependencies', 'verbose-dependencies', [CompletionResultType]::ParameterName, 'Builds the dependencies verbosely')
            break
        }
        'devspace;reset' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('dependencies', 'dependencies', [CompletionResultType]::ParameterValue, 'Resets the dependencies cache')
            [CompletionResult]::new('key', 'key', [CompletionResultType]::ParameterValue, 'Resets a cluster key')
            [CompletionResult]::new('vars', 'vars', [CompletionResultType]::ParameterValue, 'Resets the current config vars')
            break
        }
        'devspace;reset;dependencies' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;reset;key' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'The cloud provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;reset;vars' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;run' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;set' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('analytics', 'analytics', [CompletionResultType]::ParameterValue, 'Update analytics settings')
            [CompletionResult]::new('encryptionkey', 'encryptionkey', [CompletionResultType]::ParameterValue, 'Sets the encryption')
            [CompletionResult]::new('var', 'var', [CompletionResultType]::ParameterValue, 'Sets a variable')
            break
        }
        'devspace;set;analytics' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;set;encryptionkey' {
            [CompletionResult]::new('--cluster', 'cluster', [CompletionResultType]::ParameterName, 'The cluster to apply this key for')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;set;var' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;status' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('sync', 'sync', [CompletionResultType]::ParameterValue, 'Shows the sync status')
            break
        }
        'devspace;status;sync' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;sync' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Container name within pod where to execute command')
            [CompletionResult]::new('--container', 'container', [CompletionResultType]::ParameterName, 'Container name within pod where to execute command')
            [CompletionResult]::new('--container-path', 'container-path', [CompletionResultType]::ParameterName, 'Container path to use (Default is working directory)')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--download-on-initial-sync', 'download-on-initial-sync', [CompletionResultType]::ParameterName, 'DEPRECATED: Downloads all locally non existing remote files in the beginning')
            [CompletionResult]::new('--download-only', 'download-only', [CompletionResultType]::ParameterName, 'If set DevSpace will only download files')
            [CompletionResult]::new('-e', 'e', [CompletionResultType]::ParameterName, 'Exclude directory from sync')
            [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterName, 'Exclude directory from sync')
            [CompletionResult]::new('--initial-sync', 'initial-sync', [CompletionResultType]::ParameterName, 'The initial sync strategy to use (mirrorLocal, mirrorRemote, preferLocal, preferRemote, preferNewest, keepAll)')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-l', 'l', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('--label-selector', 'label-selector', [CompletionResultType]::ParameterName, 'Comma separated key=value selector list (e.g. release=test)')
            [CompletionResult]::new('--local-path', 'local-path', [CompletionResultType]::ParameterName, 'Local path to use (Default is current directory')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('--no-watch', 'no-watch', [CompletionResultType]::ParameterName, 'Synchronizes local and remote and then stops')
            [CompletionResult]::new('--pick', 'pick', [CompletionResultType]::ParameterName, 'Select a pod')
            [CompletionResult]::new('--pod', 'pod', [CompletionResultType]::ParameterName, 'Pod to open a shell to')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--upload-only', 'upload-only', [CompletionResultType]::ParameterName, 'If set DevSpace will only upload files')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterName, 'Shows every file that is synced')
            break
        }
        'devspace;ui' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--dev', 'dev', [CompletionResultType]::ParameterName, 'Ignore errors when downloading UI')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('--port', 'port', [CompletionResultType]::ParameterName, 'The port to use when opening the server')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--server', 'server', [CompletionResultType]::ParameterName, 'If enabled will force start a server (otherwise an existing UI server is searched)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;update' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('config', 'config', [CompletionResultType]::ParameterValue, 'Converts the active config to the current config version')
            [CompletionResult]::new('dependencies', 'dependencies', [CompletionResultType]::ParameterValue, 'Updates the git repositories of the dependencies defined in the devspace.yaml')
            break
        }
        'devspace;update;config' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;update;dependencies' {
            [CompletionResult]::new('--allow-cyclic', 'allow-cyclic', [CompletionResultType]::ParameterName, 'When enabled allows cyclic dependencies')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;upgrade' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;use' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            [CompletionResult]::new('context', 'context', [CompletionResultType]::ParameterValue, 'Tells DevSpace which kube context to use')
            [CompletionResult]::new('namespace', 'namespace', [CompletionResultType]::ParameterValue, 'Tells DevSpace which namespace to use')
            [CompletionResult]::new('profile', 'profile', [CompletionResultType]::ParameterValue, 'Use a specific DevSpace profile')
            [CompletionResult]::new('provider', 'provider', [CompletionResultType]::ParameterValue, 'Change the default provider')
            [CompletionResult]::new('space', 'space', [CompletionResultType]::ParameterValue, 'Use an existing space for the current configuration')
            break
        }
        'devspace;use;context' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;use;namespace' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--reset', 'reset', [CompletionResultType]::ParameterName, 'Resets the default namespace of the current kube-context')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;use;profile' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--reset', 'reset', [CompletionResultType]::ParameterName, 'Don''t use a profile anymore')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;use;provider' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
        'devspace;use;space' {
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'The devspace config file to use')
            [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterName, 'Prints the stack trace if an error occurs')
            [CompletionResult]::new('--get-token', 'get-token', [CompletionResultType]::ParameterName, 'Prints the service token to the console')
            [CompletionResult]::new('--kube-context', 'kube-context', [CompletionResultType]::ParameterName, 'The kubernetes context to use')
            [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--namespace', 'namespace', [CompletionResultType]::ParameterName, 'The kubernetes namespace to use')
            [CompletionResult]::new('--no-warn', 'no-warn', [CompletionResultType]::ParameterName, 'If true does not show any warning when deploying into a different namespace or kube-context than before')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterName, 'The devspace profile to use (if there is any)')
            [CompletionResult]::new('--provider', 'provider', [CompletionResultType]::ParameterName, 'The cloud provider to use')
            [CompletionResult]::new('--silent', 'silent', [CompletionResultType]::ParameterName, 'Run in silent mode and prevents any devspace log output except panics & fatals')
            [CompletionResult]::new('--space-id', 'space-id', [CompletionResultType]::ParameterName, 'The space id to use')
            [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--switch-context', 'switch-context', [CompletionResultType]::ParameterName, 'Switches and uses the last kube context and namespace that was used to deploy the DevSpace project')
            [CompletionResult]::new('--var', 'var', [CompletionResultType]::ParameterName, 'Variables to override during execution (e.g. --var=MYVAR=MYVALUE)')
            break
        }
    })
    $completions.Where{ $_.CompletionText -like "$wordToComplete*" } |
        Sort-Object -Property ListItemText
}