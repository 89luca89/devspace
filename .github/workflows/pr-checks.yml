name: PR checks

on: 
  pull_request:
    branches: [ master ]

env:
  GO111MODULE: on
  GOFLAGS: -mod=vendor

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          args:
            -v
            --config=.golangci.yml
            --max-same-issues=50

  test-unit:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    
    name: unit-test-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Test
        run: ./hack/coverage.bash

  test-unit-windows:
    if: github.ref != 'refs/heads/master'
    runs-on: windows-latest
    name: unit-test-windows-latest
    
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
      
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Test
        run: ./hack/coverage.bash
        shell: bash
        
  test-e2e:
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repo
      uses: actions/checkout@v2

    # Creates KinD with using k8s versions from the matrix above
    - name: Set up kind with K8s version v1.21.1
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.11.0"
        image: kindest/node:v1.21.1
    - name: Testing kind cluster set-up
      run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: e2e test
      working-directory: ./e2e
      run: go test -v 
